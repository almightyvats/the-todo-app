{"ast":null,"code":"var _jsxFileName = \"/home/vats/the-todo-app/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport Todo from './components/todo.component';\nimport io from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io(\"http://localhost:5000\");\n\nconst App = () => {\n  _s();\n\n  const [todo, setTodo] = useState(\"\");\n  const [todoArray, setTodoArray] = useState([]);\n  useEffect(() => {\n    socket.on(\"todo-added\", payload => {\n      let newTask = {\n        taskName: payload,\n        taskCompleted: false\n      };\n      setTodoArray([...todoArray, newTask]);\n    });\n  }, [todoArray]);\n\n  const handleBtnPress = event => {\n    event.preventDefault();\n    socket.emit(\"msg\", todo);\n    setTodo(\"\");\n  };\n\n  const handleTaskCompletion = taskToDelete => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: todoArray.map((todo, index) => {\n          return /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: /*#__PURE__*/_jsxDEV(Todo, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add Todo here\",\n        value: todo,\n        onChange: e => {\n          setTodo(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: event => handleBtnPress(event),\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"5S/wHLSeeO2lrRmpN6wKzaLj+GU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/vats/the-todo-app/client/src/App.tsx"],"names":["useState","useEffect","Todo","io","socket","App","todo","setTodo","todoArray","setTodoArray","on","payload","newTask","taskName","taskCompleted","handleBtnPress","event","preventDefault","emit","handleTaskCompletion","taskToDelete","map","index","e","target","value"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAwC,OAAxC;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,6BAAjB;AAGA,OAAOC,EAAP,MAAe,kBAAf;;AACA,MAAMC,MAAM,GAAGD,EAAE,CAAC,uBAAD,CAAjB;;AAEA,MAAME,GAAO,GAAG,MAAM;AAAA;;AAEpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAS,EAAT,CAAhC;AACA,QAAM,CAACQ,SAAD,EAAYC,YAAZ,IAA4BT,QAAQ,CAAU,EAAV,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACM,EAAP,CAAU,YAAV,EAAyBC,OAAD,IAAa;AACnC,UAAIC,OAAc,GAAG;AAAEC,QAAAA,QAAQ,EAAEF,OAAZ;AAAqBG,QAAAA,aAAa,EAAE;AAApC,OAArB;AAEAL,MAAAA,YAAY,CAAC,CAAC,GAAGD,SAAJ,EAAeI,OAAf,CAAD,CAAZ;AAED,KALD;AAMD,GAPQ,EAON,CAACJ,SAAD,CAPM,CAAT;;AASA,QAAMO,cAAc,GAAIC,KAAD,IAAiD;AACtEA,IAAAA,KAAK,CAACC,cAAN;AACAb,IAAAA,MAAM,CAACc,IAAP,CAAY,KAAZ,EAAmBZ,IAAnB;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACD,GAJD;;AAMA,QAAMY,oBAAoB,GAAIC,YAAD,IAA0B,CAEtD,CAFD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,8BACE;AAAA,kBACGZ,SAAS,CAACa,GAAV,CAAc,CAACf,IAAD,EAAOgB,KAAP,KAAiB;AAC9B,8BACE;AAAA,mCACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF,aAASA,KAAT;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA;AADH;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,eAFd;AAGE,QAAA,KAAK,EAAEhB,IAHT;AAIE,QAAA,QAAQ,EAAEiB,CAAC,IAAI;AAAEhB,UAAAA,OAAO,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAP;AAAyB;AAJ5C;AAAA;AAAA;AAAA;AAAA,cAVF,eAiBE;AACE,QAAA,OAAO,EACLT,KAAK,IAAID,cAAc,CAACC,KAAD,CAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CApDD;;GAAMX,G;;KAAAA,G;AAsDN,eAAeA,GAAf","sourcesContent":["import { useState, useEffect, FC } from 'react';\nimport './App.css';\nimport Todo from './components/todo.component';\nimport { ITask } from './intefaces/task.interface'\n\nimport io from \"socket.io-client\";\nconst socket = io(\"http://localhost:5000\");\n\nconst App: FC = () => {\n\n  const [todo, setTodo] = useState<string>(\"\");\n  const [todoArray, setTodoArray] = useState<ITask[]>([]);\n\n  useEffect(() => {\n    socket.on(\"todo-added\", (payload) => {\n      let newTask: ITask = { taskName: payload, taskCompleted: false};\n\n      setTodoArray([...todoArray, newTask]);\n\n    })\n  }, [todoArray]);\n\n  const handleBtnPress = (event: React.MouseEvent<HTMLElement>) : void => {\n    event.preventDefault();\n    socket.emit(\"msg\", todo);\n    setTodo(\"\");\n  }\n\n  const handleTaskCompletion = (taskToDelete: string) => {\n\n  } \n\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div>\n          {todoArray.map((todo, index) => {\n            return (\n              <h2 key={index}>\n                <Todo />\n              </h2>\n            )\n          })}\n        </div>\n        <input\n          type=\"text\"\n          placeholder=\"Add Todo here\"\n          value={todo}\n          onChange={e => { setTodo(e.target.value) }}\n        />\n\n        <button\n          onClick={\n            event => handleBtnPress(event)}\n        >Add Todo</button>\n\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}